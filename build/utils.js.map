{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"crypto\"","webpack:///./src/utils.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","w","s","require","_crypto","log","console","bind","codeStr","String","fromCodePoint","trunc","Math","randInt","max","floor","random","randIntGen","join","fixed","attr","obj","map","fn","arr","filter","char","len","keys","length","first","tail","slice","toInt","pick","idx","toHex","num","toString","base","str","parseInt","is","expected","add","x","apply","prefix","append","v","concat","_toConsumableArray","compose","hexToInt","_len","arguments","fns","Array","_key","_len2","initial","_key2","reduceRight","result","negate","undefined","randPermutor","isNot","initialArr","forceOne","randIdx","permut","_ref","j","tmp","perm","hasher","shuffler","nbPermutations","forcePermut","enough","recur","shuffled","perms","shifter","rest","elem","algo","format","data","createHash","update","digest","memoize","mem","hash","arg","key","_typeof","JSON","stringify","keyOf"],"mappings":"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","file":"utils.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","module.exports = require(\"crypto\");","'use strict'\n\nimport { createHash } from 'crypto'\n\n// some aliases\n/* istanbul ignore next */\nexport const log = console.log.bind(console)\n/* istanbul ignore next */\nexport const codeStr = String.fromCodePoint.bind(String)\n/* istanbul ignore next */\nexport const trunc = Math.trunc.bind(Math)\n\n/* istanbul ignore next */\nexport const randInt = max => Math.floor(Math.random() * max)\n\n/* istanbul ignore next */\nexport const randIntGen = max => () => randInt(max)\n\n// some little functional shortcuts\nexport const fixed = value => () => value\nexport const attr = name => obj => obj[name]\nexport const map = fn => arr => arr.map(fn)\nexport const filter = fn => arr => arr.filter(fn)\nexport const join = char => arr => arr.join(char)\nexport const keys = obj => Object.keys(obj)\nexport const len = arr => arr.length\nexport const first = arr => arr[0]\nexport const tail = arr => arr.slice(1)\nexport const pick = arr => idx => arr[idx]\nexport const toHex = num => num.toString(16)\nexport const toInt = base => str => parseInt(str, base)\nexport const is = expected => value => value === expected\nexport const add = n => x => x + n\nexport const prefix = p => str => join('')([p, str])\nexport const append = (arr, v) => [...arr, v]\nexport const apply = fn => (...args) => fn(...args)\n\nexport const hexToInt = toInt(16)\n\n// returns a composition function\nexport const compose = (...fns) =>\n  (...initial) =>\n    first(fns.reduceRight((result, fn) => [fn(...result)], initial))\n\n// returns a function that negates fn\nexport const negate = fn => (...args) => !(apply(fn)(...args))\n\nexport const isNot = compose(negate, is)\n\n// returns a function that randomly permut two values into the array\n// does not alterate the initial array\nexport const randPermutor = (initialArr, forceOne = true) => {\n  const randIdx = randIntGen(len(initialArr))\n  return function permut(arr = initialArr) {\n    const [i, j] = [randIdx(), randIdx()]\n    if (i === j && forceOne) {\n      return permut(arr)\n    }\n    const tmp = arr[i]\n    const perm = [...arr]\n    perm[i] = perm[j]\n    perm[j] = tmp\n    return perm\n  }\n}\n\n// returns a function that shuffles an array by making permutations\n// does not alterate the initial array\nexport const shuffler = (nbPermutations = null, forcePermut = true) => arr => {\n  const enough = is(nbPermutations || arr.length * 2)\n  const permut = randPermutor(arr, forcePermut)\n  const recur = (shuffled = []) =>\n    (perms = 0) => enough(perms) ? shuffled : recur(permut(shuffled))(add(1)(perms))\n  return recur([...arr])()\n}\n\n// returns a function that shift a value from an array\n// does not alterate the initial array\nexport const shifter = arr => {\n  let rest = [...arr]\n  const next = () => {\n    const elem = first(rest)\n    rest = tail(rest)\n    return { elem, rest: [...rest] }\n  }\n  return () => rest.length ? next()\n    : { elem: null, rest: [] }\n}\n\n// returns a simple hasher\nexport const hasher = (algo = 'md5', format = 'hex') =>\n  data => createHash(algo).update(data).digest(format)\n\n// optimizes execution time for functions\n// with only one parameter (ariety)\n// I've made the choice to not memoize by default all basic functions\n// I leave the choice to the developer\nexport const memoize = fn => {\n  const mem = {}\n  const hash = hasher()\n  const keyOf = arg => typeof arg !== 'object' ? arg\n    : hash(JSON.stringify(arg))\n  return arg => {\n    const key = keyOf(arg)\n    if (!mem[key]) {\n      mem[key] = fn(arg)\n    }\n    return mem[key]\n  }\n}\n"],"sourceRoot":""}